name: Deploy to Yandex Cloud

on: [push]

env:
  REGISTRY: cr.yandex
  REPO_NAME: my-website
  TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Docker auth
        run: |
          # Создаем директорию для конфига Docker
          mkdir -p ~/.docker
          
          # Формируем base64 токен
          AUTH_TOKEN=$(echo -n "json_key:${{ secrets.YC_DOCKER_JSON_KEY }}" | base64 | tr -d '\n')
          
          # Создаем конфиг
          echo "{
            \"auths\": {
              \"cr.yandex\": {
                \"auth\": \"$AUTH_TOKEN\"
              }
            }
          }" > ~/.docker/config.json

      - name: Debug auth config
        run: |
          echo "=== AUTH DEBUG INFORMATION ==="
          echo "Docker config file content:"
          cat ~/.docker/config.json
          echo "Decoded auth token:"
          echo $(cat ~/.docker/config.json | jq -r '.auths."cr.yandex".auth' | base64 -d)
          echo "============================"

      - name: Verify authentication
        run: |
          if ! docker info >/dev/null 2>&1; then
            echo "ERROR: Docker authentication failed"
            exit 1
          fi
          echo "Successfully authenticated with Yandex Container Registry"

      - name: Build Docker image
        run: |
          IMAGE_NAME="${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.REPO_NAME }}:${{ env.TAG }}"
          echo "Building image: $IMAGE_NAME"
          docker build -t $IMAGE_NAME .

      - name: Push Docker image
        run: |
          IMAGE_NAME="${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.REPO_NAME }}:${{ env.TAG }}"
          echo "Pushing image: $IMAGE_NAME"
          if ! docker push $IMAGE_NAME; then
            echo "ERROR: Failed to push image"
            echo "Trying to get more info..."
            docker info
            exit 1
          fi
          echo "Successfully pushed $IMAGE_NAME"
          echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.YC_VM_IP }}
          username: ${{ secrets.YC_VM_USER }}
          key: ${{ secrets.YC_VM_SSH_KEY }}
          script: |
            # Настройка аутентификации
            mkdir -p ~/.docker
            AUTH_TOKEN=$(echo -n "json_key:${{ secrets.YC_DOCKER_JSON_KEY }}" | base64 | tr -d '\n')
            echo "{
              \"auths\": {
                \"cr.yandex\": {
                  \"auth\": \"$AUTH_TOKEN\"
                }
              }
            }" > ~/.docker/config.json
            
            # Получение и запуск контейнера
            IMAGE_NAME="${{ env.REGISTRY }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.REPO_NAME }}:${{ env.TAG }}"
            echo "Pulling image: $IMAGE_NAME"
            docker pull $IMAGE_NAME
            
            echo "Stopping old container"
            docker stop web-container || true
            docker rm web-container || true
            
            echo "Starting new container"
            docker run -d --name web-container -p 80:80 $IMAGE_NAME
            
            echo "Verifying container"
            sleep 5
            if ! curl -s http://localhost >/dev/null; then
              echo "ERROR: Container failed to start"
              exit 1
            fi
            echo "Container is running successfully"
