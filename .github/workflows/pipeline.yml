name: Deploy with Docker Hub

on: [push]

env:
  DOCKER_REPO: msorok337/my-website-new  # Замените на ваш репозиторий
  TAG: latest

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Build and push
        run: |
          docker build -t ${{ env.DOCKER_REPO }}:${{ env.TAG }} .
          docker push ${{ env.DOCKER_REPO }}:${{ env.TAG }}
          echo "IMAGE_NAME=${{ env.DOCKER_REPO }}:${{ env.TAG }}" >> $GITHUB_ENV

      - name: Verify push
        run: |
          echo "Successfully pushed to Docker Hub:"
          echo "Image: ${{ env.DOCKER_REPO }}:${{ env.TAG }}"
  
  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      # 1. Настройка SSH подключения
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.VM_SSH_KEY }}" > ~/.ssh/vm_key
          chmod 600 ~/.ssh/vm_key
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
          echo "UserKnownHostsFile /dev/null" >> ~/.ssh/config
  
      # 2. Проверка подключения (отдельный шаг)
      - name: Test SSH Access as invoicer-test
        run: |
          echo "Проверяем подключение к invoicer-test@${{ secrets.VM_IP }}..."
          ssh -i ~/.ssh/vm_key \
            -o ConnectTimeout=15 \
            -o LogLevel=DEBUG \
            invoicer-test@${{ secrets.VM_IP }} << 'EOF'
          echo "Успешное подключение!"
          whoami
          pwd
          EOF
          if [ $? -ne 0 ]; then
            echo "::error::Не удалось подключиться к invoicer-test"
            echo "Проверьте:"
            echo "1. Ключ в ~/.ssh/authorized_keys на сервере"
            echo "2. Права: chmod 700 ~/.ssh && chmod 600 ~/.ssh/authorized_keys"
            echo "3. Пользователь invoicer-test существует"
            exit 1
          fi
  
      # 3. Деплой приложения
      - name: Deploy Application
        run: |
          ssh -i ~/.ssh/vm_key \
            invoicer-test@${{ secrets.VM_IP }} << 'DEPLOY'
          # Docker аутентификация
          echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | \
            docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin
  
          # Остановка старого контейнера
          docker stop invoicer-app || true
          docker rm invoicer-app || true
  
          # Запуск нового контейнера
          docker pull ${{ env.DOCKER_REPO }}:${{ env.TAG }}
          docker run -d \
            --name invoicer-app \
            -p 80:80 \
            -e APP_ENV=production \
            ${{ env.DOCKER_REPO }}:${{ env.TAG }}
  
          # Проверка
          sleep 5
          curl -fs http://localhost || {
            echo "::error::Контейнер не отвечает"
            docker logs invoicer-app
            exit 1
          }
          echo "Приложение успешно запущено!"
          DEPLOY
