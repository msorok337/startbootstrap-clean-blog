name: Deploy to Yandex Cloud

on: [push]

env:
  YC_REGISTRY: cr.yandex/${{ secrets.YC_REGISTRY_ID }}

jobs:
  authenticate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Create auth config
        run: |
          mkdir -p ~/.docker
          echo '{
            "auths": {
              "cr.yandex": {
                "auth": "$(echo -n "json_key:${{ secrets.YC_DOCKER_JSON_KEY }}" | base64 -w 0)"
              }
            }
          }' > ~/.docker/config.json

    build-and-push:
    needs: authenticate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          # Формируем полное имя образа
          IMAGE_NAME="${{ env.YC_REGISTRY }}/my-website:latest"
          echo "Building image: $IMAGE_NAME"
          docker build -t $IMAGE_NAME .
          
          # Проверяем что образ создан
          if ! docker image inspect $IMAGE_NAME >/dev/null 2>&1; then
            echo "ERROR: Docker image build failed"
            exit 1
          fi

      - name: Push to Yandex Container Registry
        run: |
          IMAGE_NAME="${{ env.YC_REGISTRY }}/my-website:latest"
          
          # Проверяем аутентификацию
          if ! docker info >/dev/null 2>&1; then
            echo "ERROR: Not authenticated to Docker registry"
            exit 1
          fi
          
          # Пробуем сделать push с таймаутом
          echo "Pushing image to Yandex Container Registry..."
          if ! timeout 300 docker push $IMAGE_NAME; then
            echo "ERROR: Push failed or timed out after 5 minutes"
            
            # Дополнительная диагностика
            echo "Debug info:"
            docker info
            cat ~/.docker/config.json | jq '.auths."cr.yandex".auth' | xargs echo | base64 -d
            
            exit 1
          fi
          
          echo "Successfully pushed $IMAGE_NAME"

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.YC_VM_IP }}
          username: ${{ secrets.YC_VM_USER }}
          key: ${{ secrets.YC_VM_SSH_KEY }}
          script: |
            mkdir -p ~/.docker
            echo '{
              "auths": {
                "cr.yandex": {
                  "auth": "$(echo -n "json_key:${{ secrets.YC_DOCKER_JSON_KEY }}" | base64 -w 0)"
                }
              }
            }' > ~/.docker/config.json
            docker pull ${{ env.YC_REGISTRY }}/my-website:latest
            docker stop my-website || true
            docker rm my-website || true
            docker run -d --name my-website -p 80:80 ${{ env.YC_REGISTRY }}/my-website:latest
