name: Deploy to Yandex Cloud

on: [push]

env:
  REGISTRY_HOST: cr.yandex
  REPO_NAME: website-app  # Можно менять без изменения остального кода
  TAG: latest             # Или использовать ${{ github.sha }} для уникальных тегов

jobs:
  auth-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure Docker auth
        run: |
          mkdir -p ~/.docker
          AUTH=$(echo -n "json_key:${{ secrets.YC_DOCKER_JSON_KEY }}" | base64 -w 0)
          echo "{\"auths\":{\"${{ env.REGISTRY_HOST }}\":{\"auth\":\"$AUTH\"}}}" > ~/.docker/config.json

      - name: Build Docker image
        run: |
          FULL_IMAGE_NAME="${{ env.REGISTRY_HOST }}/${{ secrets.YC_REGISTRY_ID }}/${{ env.REPO_NAME }}:${{ env.TAG }}"
          docker build -t $FULL_IMAGE_NAME .
          docker push $FULL_IMAGE_NAME
          echo "FULL_IMAGE_NAME=$FULL_IMAGE_NAME" >> $GITHUB_ENV

  deploy:
    needs: auth-and-build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to VM
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.YC_VM_IP }}
          username: ${{ secrets.YC_VM_USER }}
          key: ${{ secrets.YC_VM_SSH_KEY }}
          script: |
            mkdir -p ~/.docker
            AUTH=$(echo -n "json_key:${{ secrets.YC_DOCKER_JSON_KEY }}" | base64 -w 0)
            echo "{\"auths\":{\"${{ env.REGISTRY_HOST }}\":{\"auth\":\"$AUTH\"}}}" > ~/.docker/config.json
            docker pull ${{ env.FULL_IMAGE_NAME }}
            docker stop running-app || true
            docker rm running-app || true
            docker run -d --name running-app -p 80:80 ${{ env.FULL_IMAGE_NAME }}
